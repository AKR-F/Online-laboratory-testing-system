{"ast":null,"code":"// import React, {useState} from \"react\";\n// import styled from 'styled-components'\n// import { Await, Link } from \"react-router-dom\";\n// import Laboratory from \"../Laboratory/Laboratory\";\n// import { Axios } from \"axios\";\n// const Section = styled.section`\n//     display: flex;\n//     justify-content: center;\n//     flex-wrap: nowrap;\n// `\n// const BigBlock = styled.div`\n//     width: ${({$BigWeight}) => ($BigWeight ? '1248px' : '1247px')};\n//     height: ${({$BigHeight}) => ($BigHeight ? '425px' : '357px')};\n//     background-color: ${({$BigFon}) => ($BigFon ? '#E2EDD0' : '#D5DEF6')};\n//     border-radius: 10px;\n//     display: flex;\n//     gap: ${({$GapForm}) => ($GapForm ? '75px' : '0px')};\n//     .block__test{\n//         width: 540px;\n//         display: flex;\n//         flex-direction: column;\n//         margin-top: 5px;\n//     }\n//     .block__one{\n//         margin-top: 5px;\n//     }\n// `\n// const MinBlock = styled.li`\n//     width: 592px;\n//     height: 102px;\n//     border-radius: 10px;\n//     background-color: #FFFFFF;\n//     padding: 10px;\n//     list-style-type: none;\n// `\n// const UlMinBlock = styled.ul`\n//     display: flex;\n//     flex-direction: column;\n//     gap: 5px;\n//     padding-top: ${({$PaddingTopForm}) => ($PaddingTopForm ? '10px' : '0px')};\n// `\n// const UlList = styled.ul`\n//     display: flex;\n//     flex-wrap: wrap;\n//     justify-content: center;\n//     gap: 25px;\n\n//     .editing__container{\n//         width: 608px;\n//         height: 260px;\n//         background: #E2EDD0;\n//         border-radius: 7px;\n//         list-style-type: none;\n//         display: flex;\n//         align-items: center;\n//     }\n//     .editing__block-Two{\n//         padding: 0px 30px 30px 20px;\n//     }\n//     .editing__block-text{\n//     color: #000;\n//     font-family: \"Montserrat\";\n//     font-size: 16px;\n//     }\n//     .editing__block-inp{\n//         display: flex;\n//         align-items: center;\n//     }\n//     .some-input {\n//         border: none;\n//         border-bottom: 1px solid #000;\n//         background-color: transparent;\n//         color: inherit;\n//         outline: none;\n//         margin-left: 5px;\n//         font-family: \"Montserrat\";\n//     }\n\n//     .editing__block-input{\n//         width: 555px;\n//         height: 60px;\n//         border-radius: 7px;\n//         border-style: none;\n//         color: #000;\n//         font-family: \"Montserrat\";\n//         font-size: 16px;\n//         line-height: 27px; \n//         outline: none;\n//     }\n//     .editing__block-bth{\n//         display: flex;\n//         gap: 10px;\n//         /* padding-left: 5px; */\n//     }\n//     .editing__block{\n//         padding: 0px 30px 0px 20px;\n//         display: flex;\n//         gap: 75px;\n//         align-items: baseline;\n//     }\n//     .editing__block-name{\n//         display: flex;\n//         align-items: baseline;\n//     }\n//     .block__button{\n//         display: flex;\n//         flex-direction: column;\n//         gap: 10px;\n//     }\n//     .block__end{\n//         display: flex;\n//         flex-direction: column;\n//         gap: 5px;\n//         background-color: #E2EDD0;\n//         border-radius: 5px;\n//         width: 1248px;\n//         height: 117px;\n//         justify-content: center;\n//         border-style: none;\n//         align-items: center;\n//         cursor: pointer;\n//         &:hover{\n//             background-color: #d7ebb5eb;\n//         }\n//     }\n//     .block__end-link{\n//         color: #000;\n//         font-size: 16px;\n//         font-family: 'Montserrat';\n//         line-height: 27px;\n//         text-decoration: none;\n//         display: flex;\n//         justify-content: center;\n//         width: 1248px;\n//     }\n// ` \n// const List = styled.li`\n//   width: ${({ $Block }) => ($Block ? '1248px' : '608px')};\n//   height: ${({ $Block }) => ($Block ? '59px' : '260px')};\n//   background-color: ${({ $Block }) => ($Block ? '#D9D9D9' : '#D5DEF6')};\n//   border-radius: 7px;\n//   display: flex;\n//   align-items: center;\n//   list-style-type: none;\n// `\n// const NameLab = styled.h3`\n//     color: #000;\n//     text-align: center;\n//     font-family: \"Montserrat\";\n//     font-size: 20px;\n//     line-height: 40px;\n//     font-weight: 500;\n// `\n// const TitleBlock = styled.h3`\n//     color: #000;\n//     font-family: \"Montserrat\";\n//     font-size: ${({$FontSize}) => ($FontSize ? '16px' : '19px')};\n//     font-weight: ${({$FontWeight}) => ($FontWeight ? '400' : '500')};\n//     line-height: ${({$LineHeight}) => ($LineHeight ? '45px' : '27px')};\n//     padding-left: ${({$Padding}) => ($Padding ? '45px' : '0px')};\n//     margin: ${({$Margin}) => ($Margin ? '0px' : 'none')};\n// `\n\n// const ButtonAdd = styled.button`\n//     font-family: \"Montserrat\";\n//     width: ${({$ButtonAddW}) => ($ButtonAddW ? '400px' : '274px') };\n//     flex-shrink: 0;\n//     border-radius: 4px;\n//     border: none;\n//     background: #FFF;\n//     height: 42px;\n//     cursor: pointer;\n//         &:hover{\n//             background: #C8D5F6;\n//             color: #FFF;\n//             border-style: none;\n//             transition: 0.5s;\n//         }\n// `\n// const ButtonAddForm = styled.button`\n//     font-family: \"Montserrat\";\n//     width: 275px;\n//     flex-shrink: 0;\n//     border-radius: 4px;\n//     background: #FFF;\n//     height: 42px;\n//     border: none;\n//     margin-left: 5px;\n//     cursor: pointer;\n//         &:hover{\n//             background: #C8D5F6;\n//             color: #FFF;\n//             border-style: none;\n//             transition: 0.5s;\n//         }\n// `\n// const ButtonDelete = styled.button`\n//     font-family: \"Montserrat\";\n//     width: 268px;\n//     flex-shrink: 0;\n//     border-radius: 4px;\n//     border: none;\n//     background: #FFF;\n\n//     cursor: pointer;\n//         &:hover{\n//             background: #FF7070;\n//             color: #FFF;\n//             border-style: none;\n//             transition: 0.6s;\n//         }\n// `\n// const FormBlock = styled.li`\n//     display: flex;\n//     flex-direction: column;\n//     padding: 5px;\n//     gap: 2px;\n// `\n// const FormLabel = styled.label`\n//     font-family: 'Montserrat';\n//     font-size: 16px;\n//     line-height: 27px;\n//     font-weight: 400;\n//     color: #000000;\n// `\n// const FormInput = styled.input`\n//     width: 550px;\n//     height: 30px;\n//     border-radius: 10px;\n//     background-color: #FFFFFF;\n//     border: none;\n//     outline: none;\n//     font-size: 16px;\n// `\n// const ButtonFun = styled.button`\n//     background-color: #D9D9D9;\n//     width: 1248px;\n//     height: 48px;\n//     border-radius: 5px;\n//     border-style: none;\n//     cursor: pointer;\n//     font-size: 16px;\n//     font-family: 'Montserrat';\n//     font-weight: 400px;\n\n//     &:hover{\n//         background-color: ${({$HoverButton}) => ($HoverButton ? '#C8D5F6' : '#FF7070')};\n//         color: #FFFFFF;\n//         transition: 0.5s;\n//     }\n// `\n// const NameLabInput = styled.input`\n//     display: flex;\n//     border: none;\n//     background: none;\n//     width: 608px;\n//     height: 260px;\n//     font-size: 18px;\n//     padding: 0px 0px 0px 30px;\n//     outline: none;\n// `\n\n// const LaboratoryAdd = () => {\n//     const [labTitle, setLabTitle] = useState(\"\");\n//     const [labDescription, setLabDescription] = useState(\"\");\n//     const [functions, setFunctions] = useState([]);\n//     const [constructions, setConstructions] = useState([]);\n//     const [symbols, setSymbols] = useState(0);\n//     const [rows, setRows] = useState(0);\n\n//     const handleLabTitleChange = (event) => {\n//       setLabTitle(event.target.value);\n//     };\n\n//     const handleLabDescriptionChange = (event) => {\n//       setLabDescription(event.target.value);\n//     };\n\n//     const handleFunctionInputChange = (event, index) => {\n//       const updatedFunctions = [...functions];\n//       updatedFunctions[index][event.target.name] = event.target.value;\n//       setFunctions(updatedFunctions);\n//     };\n\n//     const handleTestCaseInputChange = (event, funcIndex, testCaseIndex) => {\n//       const updatedFunctions = [...functions];\n//       updatedFunctions[funcIndex].test_cases[testCaseIndex][event.target.name] = event.target.value;\n//       setFunctions(updatedFunctions);\n//     };\n\n//     const handleFormulaInputChange = (event, funcIndex, formulaIndex) => {\n//       const updatedFunctions = [...functions];\n//       updatedFunctions[funcIndex].formulas[formulaIndex][event.target.name] = event.target.value;\n//       setFunctions(updatedFunctions);\n//     };\n\n//     const handleLinkedFormulaInputChange = (event, funcIndex, linkedFormulaIndex) => {\n//       const updatedFunctions = [...functions];\n//       updatedFunctions[funcIndex].linked_formulas[linkedFormulaIndex][event.target.name] = event.target.value;\n//       setFunctions(updatedFunctions);\n//     };\n\n//     const handleConstructionInputChange = (event, index) => {\n//       const updatedConstructions = [...constructions];\n//       updatedConstructions[index][event.target.name] = event.target.value;\n//       setConstructions(updatedConstructions);\n//     };\n\n//     const handleLengthCheckInputChange = (event) => {\n//       const name = event.target.name;\n//       const value = event.target.value;\n\n//       if (name === \"symbols\") {\n//         setSymbols(value);\n//       } else if (name === \"rows\") {\n//         setRows(value);\n//       }\n//     };\n\n//     const handleSaveLabData = async () => {\n//         const labData = {\n//           lab_task: {\n//             task_text: labDescription,\n//             functions,\n//             constructions,\n//             length_checks: {\n//               symbols,\n//               rows,\n//             },\n//           },\n//         };\n\n//         try {\n//           const response = await Axios.post(\n//             'http://0.0.0.0:8000/docs#/newtask',\n//             labData\n//           );\n//           console.log(response.data);\n//           return response.data;\n//         } catch (error) {\n//           console.error('Error during lab data save:', error);\n//           return { error: 'Failed to save lab data' };\n//         }\n//       };\n\n//       const handleSaveTaskPyTest = async (data) => {\n//         return Axios.post('http://0.0.0.0:8000/docs#/newTaskPyTest',data)\n//       } \n\n//     const [inputValueSimbol, setInputValueSimbol] = useState('')\n//     const [inputValueStr, setInputValueStr] = useState('')\n//     const [lengthInput, setLengthInput] = useState([])\n//     const [addConstr, setAddConstr] = useState('')\n//     const [addConstrBtn, setAddConstrBtn] = useState([])\n\n//     const handleAddConstr = (event) => {\n//         setAddConstr(event.target.value)\n//     }\n\n//     const handleAddConstrBtn = () => {\n//         if(addConstr.trim !== ''){\n//             const newConstr = [...addConstrBtn, addConstr]\n\n//             setAddConstrBtn(newConstr)\n//             setAddConstr('')\n//         }\n//     }\n\n//     const handleDeleteConstr = () => {\n//         setAddConstr('')\n//     }\n\n//     const handleChange = (event, inputNumber) => {\n//         const newValue = event.target.value;\n//         if ((inputNumber === 1 && newValue !== inputValueStr) || \n//             (inputNumber === 2 && newValue !== inputValueSimbol)) {\n//                 inputNumber === 1 ? setInputValueSimbol(newValue) : setInputValueStr(newValue);\n//             }\n//     }\n//     const handleDelete = () => {\n//         setInputValueSimbol('')\n//         setInputValueStr('')\n//     }\n\n//     const handleAddLengthCheck = () => {\n//         const newCheck = {\n//             symbolLength: inputValueSimbol.length,\n//             stringLength: inputValueStr.length,\n//         };\n//         setLengthInput([...lengthInput, newCheck]);\n\n//         setInputValueSimbol('');\n//         setInputValueStr('');\n//     }\n\n//     const [idFormula, setIdFormula] = useState('');\n//     const [descriptionFormula, setDescriptionFormula] = useState('');\n//     const [formula, setFormula] = useState('');\n//     const [addFormula, setAddFormula] = useState([])\n\n//     const [idRelatedFormula, setIdRelatedFormula] = useState('');\n//     const [descriptionRelatedFormula, setDescriptionRelatedFormula] = useState('');\n//     const [formulaRelated, setRelatedFormula] = useState('');\n//     const [addRelatedFormula, setAddRelatedFormula] = useState([])\n\n//     const handleAddFormul = (event, inputFormul) => {\n//         const newFormulaValue = event.target.value;\n//         if (inputFormul === 1) {\n//             setIdFormula(newFormulaValue);\n//         } else if (inputFormul === 2) {\n//             setDescriptionFormula(newFormulaValue);\n//         } else if (inputFormul === 3) {\n//             setFormula(newFormulaValue);\n//         }\n//     };\n\n//     const handleAddFormulBtn = () => {\n//         const newFormul = {\n//             idForm: idFormula.length,\n//             descriptionForm: descriptionFormula.length,\n//             Form: formula.length,\n//         };\n//         setAddFormula([...addFormula, newFormul]);\n//         setIdFormula('');\n//         setDescriptionFormula('');\n//         setFormula('');\n//     };\n\n//     const handleDelFormulBtn = () => {\n//         setIdFormula('')\n//         setDescriptionFormula('')\n//         setFormula('')\n//     }\n\n//     const handleAddRelatedFormul = (event, inputFormulRelated) => {\n//         const newFormulaRelatedValue = event.target.value;\n//         if (inputFormulRelated === 1) {\n//             setIdRelatedFormula(newFormulaRelatedValue);\n//         } else if (inputFormulRelated === 2) {\n//             setDescriptionRelatedFormula(newFormulaRelatedValue);\n//         } else if (inputFormulRelated === 3) {\n//             setRelatedFormula(newFormulaRelatedValue);\n//         }\n//     };\n\n//     const handleAddFormulRelatedBtn = () => {\n//         const newFormulRelated = {\n//             idForm: idFormula.length,\n//             descriptionForm: descriptionFormula.length,\n//             Form: formula.length,\n//         };\n//         setAddRelatedFormula([...addRelatedFormula, newFormulRelated]);\n//         setIdRelatedFormula('');\n//         setDescriptionRelatedFormula('');\n//         setRelatedFormula('');\n//     };\n\n//     const handleDelFormulRelatedBtn = () => {\n//         setIdRelatedFormula('')\n//         setDescriptionRelatedFormula('')\n//         setRelatedFormula('')\n//     }\n\n//     return ( \n//         <>\n//         <Section>\n//             <UlList>\n//                 <List>\n//                     <NameLabInput \n//                         type=\"text\" \n//                         placeholder=\"Введите назавание лабораторной работы\"\n//                         onChange={handleLabTitleChange}\n//                     /> \n//                 </List>\n//                 <List>\n//                     <div className=\"editing__block-Two\">\n//                         <TitleBlock>\n//                             Формат ввода данных:\n//                         </TitleBlock>\n//                             <p className=\"editing__block-text\">\n//                                 Вы можете пояснить, как будет происходить ввод данных\n//                             </p>\n//                             <input \n//                                 className=\"editing__block-input\" \n//                                 type=\"text\" \n//                                 onChange={handleLabDescriptionChange}\n//                                 placeholder=\"Введите текст\"\n//                             />   \n//                     </div>\n//                 </List> \n//                 <BigBlock $BigFon $BigHeight $BigWeight $GapForm>\n//                     <div className=\"block__one\">\n//                         <TitleBlock $Padding $Margin>\n//                             Cписок тестов:\n//                         </TitleBlock> \n//                             <UlMinBlock>\n//                                 <MinBlock>\n//                                         <TitleBlock $FontSize $FontWeight $Margin>\n//                                             Тест 1 \"Проверка на ...\"\n//                                         </TitleBlock>\n//                                         <div className=\"editing__block-name\">\n//                                             <TitleBlock $FontSize $FontWeight  $Margin>\n//                                                 Входные данные:\n//                                             </TitleBlock> \n//                                                 <input type=\"text\" className=\"some-input\"/>     \n//                                         </div>  \n//                                         <div className=\"editing__block-name\">\n//                                             <TitleBlock $FontSize $FontWeight  $Margin>  \n//                                             Вывод:\n//                                             </TitleBlock> \n//                                                 <input type=\"text\" className=\"some-input\"/>     \n//                                         </div> \n//                                         <IoIosClose className=\"icon\" onClick={()=>handleTestDelete(index)}/>\n//                                 </MinBlock>\n//                                 <MinBlock>\n//                                     <TitleBlock $FontSize $FontWeight $Margin>\n//                                             Тест 1 \"Проверка на ...\"\n//                                         </TitleBlock>\n//                                         <div className=\"editing__block-name\">\n//                                             <TitleBlock $FontSize $FontWeight  $Margin>\n//                                                 Входные данные:\n//                                             </TitleBlock> \n//                                                 <input type=\"text\" className=\"some-input\"/>     \n//                                         </div>  \n//                                         <div className=\"editing__block-name\">\n//                                             <TitleBlock $FontSize $FontWeight  $Margin>  \n//                                                 Вывод:\n//                                             </TitleBlock> \n//                                                 <input type=\"text\" className=\"some-input\"/>     \n//                                         </div> \n//                                         <IoIosClose className=\"icon\"/>\n//                                 </MinBlock>\n//                                 <MinBlock>\n//                                     <TitleBlock $FontSize $FontWeight $Margin>\n//                                             Тест 1 \"Проверка на ...\"\n//                                         </TitleBlock>\n//                                         <div className=\"editing__block-name\">\n//                                             <TitleBlock $FontSize $FontWeight  $Margin>\n//                                                 Входные данные:\n//                                             </TitleBlock> \n//                                                 <input type=\"text\" className=\"some-input\"/>     \n//                                         </div>  \n//                                         <div className=\"editing__block-name\">\n//                                             <TitleBlock $FontSize $FontWeight  $Margin>  \n//                                                 Вывод:\n//                                             </TitleBlock> \n//                                                 <input type=\"text\" className=\"some-input\"/>     \n//                                         </div> \n//                                         <IoIosClose className=\"icon\"/>\n//                                 </MinBlock>   \n//                             </UlMinBlock>\n//                     </div>\n//                     <div className=\"block__test\">\n//                         <TitleBlock>\n//                             Добавить новый тест:    \n//                         </TitleBlock> \n//                         <div className=\"editing__block-name\">\n//                             <TitleBlock $FontSize $FontWeight>\n//                                 Введите название теста:\n//                             </TitleBlock> \n//                                 <input type=\"text\" className=\"some-input\"/>     \n//                         </div>\n//                         <div className=\"editing__block-name\">\n//                             <TitleBlock $FontSize $FontWeight>\n//                                 Входные данные:\n//                             </TitleBlock> \n//                                 <input type=\"text\" className=\"some-input\"/>     \n//                         </div>\n//                         <div className=\"editing__block-name\">\n//                             <TitleBlock $FontSize $FontWeight>\n//                                 Вывод:\n//                             </TitleBlock> \n//                                 <input type=\"text\" className=\"some-input\"/>     \n//                         </div>\n//                         <ButtonAdd $ButtonAddW>\n//                             Добавить тест\n//                         </ButtonAdd>\n//                     </div>\n//                 </BigBlock>\n//                 <BigBlock >\n//                 <div className=\"block__one\">\n//                         <TitleBlock $Padding $Margin>\n//                             Cписок тестов:\n//                         </TitleBlock> \n//                             <UlMinBlock>\n//                                 <MinBlock>\n//                                         <TitleBlock $FontSize $FontWeight $Margin>\n//                                             Тест 1 \"Проверка на ...\"\n//                                         </TitleBlock>\n//                                         <div className=\"editing__block-name\">\n//                                             <TitleBlock $FontSize $FontWeight  $Margin>\n//                                                 Входные данные:\n//                                             </TitleBlock> \n//                                                 <input type=\"text\" className=\"some-input\"/>     \n//                                         </div>  \n//                                         <div className=\"editing__block-name\">\n//                                             <TitleBlock $FontSize $FontWeight  $Margin>  \n//                                             Вывод:\n//                                             </TitleBlock> \n//                                                 <input type=\"text\" className=\"some-input\"/>     \n//                                         </div> \n//                                         <IoIosClose className=\"icon\" />\n//                                 </MinBlock>\n//                                 <MinBlock>  \n//                                     <TitleBlock $FontSize $FontWeight $Margin>\n//                                             Тест 1 \"Проверка на ...\"\n//                                         </TitleBlock>\n//                                         <div className=\"editing__block-name\">\n//                                             <TitleBlock $FontSize $FontWeight  $Margin>\n//                                                 Входные данные:\n//                                             </TitleBlock> \n//                                                 <input type=\"text\" className=\"some-input\"/>     \n//                                         </div>  \n//                                         <div className=\"editing__block-name\">\n//                                             <TitleBlock $FontSize $FontWeight  $Margin>  \n//                                                 Вывод:\n//                                             </TitleBlock> \n//                                                 <input type=\"text\" className=\"some-input\"/>     \n//                                         </div> \n//                                         <IoIosClose className=\"icon\" />\n//                                 </MinBlock>  \n//                             </UlMinBlock>\n//                     </div>\n//                     <div className=\"block__test\">\n//                         <TitleBlock $Padding>\n//                             Формулы\n//                         </TitleBlock> \n//                         <UlMinBlock >\n//                             <FormBlock>\n//                                 <FormInput \n//                                     type=\"text\"\n//                                     value={idRelatedFormula}\n//                                     onChange={(event) => handleAddRelatedFormul(event,1)}\n//                                     placeholder=\"Введите формулу:\"\n//                                  />\n//                             </FormBlock>\n//                             <div className=\"editing__block-bth\">\n//                                 <ButtonAddForm onClick={handleAddFormulRelatedBtn}>\n//                                     Добавить формулу\n//                                 </ButtonAddForm>\n//                             </div>   \n//                         </UlMinBlock>\n//                     </div>\n//                 </BigBlock>\n//                 <div className=\"block__button\"> \n//                     <button className=\"block__end\">\n//                         <Link className=\"block__end-link\" to='/Laboratory'>\n//                             Завершить редактирование и добавить лабораторную\n//                         </Link>\n//                     </button>   \n//                 </div>\n//             </UlList>  \n//         </Section>\n//         </>\n//      );\n// }\n\n// export default LaboratoryAdd;","map":{"version":3,"names":[],"sources":["/Users/danielkudinov/Desktop/react/sdo-react/sdo/src/pages/LaboratoryAdd/index.jsx"],"sourcesContent":["// import React, {useState} from \"react\";\n// import styled from 'styled-components'\n// import { Await, Link } from \"react-router-dom\";\n// import Laboratory from \"../Laboratory/Laboratory\";\n// import { Axios } from \"axios\";\n// const Section = styled.section`\n//     display: flex;\n//     justify-content: center;\n//     flex-wrap: nowrap;\n// `\n// const BigBlock = styled.div`\n//     width: ${({$BigWeight}) => ($BigWeight ? '1248px' : '1247px')};\n//     height: ${({$BigHeight}) => ($BigHeight ? '425px' : '357px')};\n//     background-color: ${({$BigFon}) => ($BigFon ? '#E2EDD0' : '#D5DEF6')};\n//     border-radius: 10px;\n//     display: flex;\n//     gap: ${({$GapForm}) => ($GapForm ? '75px' : '0px')};\n//     .block__test{\n//         width: 540px;\n//         display: flex;\n//         flex-direction: column;\n//         margin-top: 5px;\n//     }\n//     .block__one{\n//         margin-top: 5px;\n//     }\n// `\n// const MinBlock = styled.li`\n//     width: 592px;\n//     height: 102px;\n//     border-radius: 10px;\n//     background-color: #FFFFFF;\n//     padding: 10px;\n//     list-style-type: none;\n// `\n// const UlMinBlock = styled.ul`\n//     display: flex;\n//     flex-direction: column;\n//     gap: 5px;\n//     padding-top: ${({$PaddingTopForm}) => ($PaddingTopForm ? '10px' : '0px')};\n// `\n// const UlList = styled.ul`\n//     display: flex;\n//     flex-wrap: wrap;\n//     justify-content: center;\n//     gap: 25px;\n\n//     .editing__container{\n//         width: 608px;\n//         height: 260px;\n//         background: #E2EDD0;\n//         border-radius: 7px;\n//         list-style-type: none;\n//         display: flex;\n//         align-items: center;\n//     }\n//     .editing__block-Two{\n//         padding: 0px 30px 30px 20px;\n//     }\n//     .editing__block-text{\n//     color: #000;\n//     font-family: \"Montserrat\";\n//     font-size: 16px;\n//     }\n//     .editing__block-inp{\n//         display: flex;\n//         align-items: center;\n//     }\n//     .some-input {\n//         border: none;\n//         border-bottom: 1px solid #000;\n//         background-color: transparent;\n//         color: inherit;\n//         outline: none;\n//         margin-left: 5px;\n//         font-family: \"Montserrat\";\n//     }\n\n//     .editing__block-input{\n//         width: 555px;\n//         height: 60px;\n//         border-radius: 7px;\n//         border-style: none;\n//         color: #000;\n//         font-family: \"Montserrat\";\n//         font-size: 16px;\n//         line-height: 27px; \n//         outline: none;\n//     }\n//     .editing__block-bth{\n//         display: flex;\n//         gap: 10px;\n//         /* padding-left: 5px; */\n//     }\n//     .editing__block{\n//         padding: 0px 30px 0px 20px;\n//         display: flex;\n//         gap: 75px;\n//         align-items: baseline;\n//     }\n//     .editing__block-name{\n//         display: flex;\n//         align-items: baseline;\n//     }\n//     .block__button{\n//         display: flex;\n//         flex-direction: column;\n//         gap: 10px;\n//     }\n//     .block__end{\n//         display: flex;\n//         flex-direction: column;\n//         gap: 5px;\n//         background-color: #E2EDD0;\n//         border-radius: 5px;\n//         width: 1248px;\n//         height: 117px;\n//         justify-content: center;\n//         border-style: none;\n//         align-items: center;\n//         cursor: pointer;\n//         &:hover{\n//             background-color: #d7ebb5eb;\n//         }\n//     }\n//     .block__end-link{\n//         color: #000;\n//         font-size: 16px;\n//         font-family: 'Montserrat';\n//         line-height: 27px;\n//         text-decoration: none;\n//         display: flex;\n//         justify-content: center;\n//         width: 1248px;\n//     }\n// ` \n// const List = styled.li`\n//   width: ${({ $Block }) => ($Block ? '1248px' : '608px')};\n//   height: ${({ $Block }) => ($Block ? '59px' : '260px')};\n//   background-color: ${({ $Block }) => ($Block ? '#D9D9D9' : '#D5DEF6')};\n//   border-radius: 7px;\n//   display: flex;\n//   align-items: center;\n//   list-style-type: none;\n// `\n// const NameLab = styled.h3`\n//     color: #000;\n//     text-align: center;\n//     font-family: \"Montserrat\";\n//     font-size: 20px;\n//     line-height: 40px;\n//     font-weight: 500;\n// `\n// const TitleBlock = styled.h3`\n//     color: #000;\n//     font-family: \"Montserrat\";\n//     font-size: ${({$FontSize}) => ($FontSize ? '16px' : '19px')};\n//     font-weight: ${({$FontWeight}) => ($FontWeight ? '400' : '500')};\n//     line-height: ${({$LineHeight}) => ($LineHeight ? '45px' : '27px')};\n//     padding-left: ${({$Padding}) => ($Padding ? '45px' : '0px')};\n//     margin: ${({$Margin}) => ($Margin ? '0px' : 'none')};\n// `\n\n// const ButtonAdd = styled.button`\n//     font-family: \"Montserrat\";\n//     width: ${({$ButtonAddW}) => ($ButtonAddW ? '400px' : '274px') };\n//     flex-shrink: 0;\n//     border-radius: 4px;\n//     border: none;\n//     background: #FFF;\n//     height: 42px;\n//     cursor: pointer;\n//         &:hover{\n//             background: #C8D5F6;\n//             color: #FFF;\n//             border-style: none;\n//             transition: 0.5s;\n//         }\n// `\n// const ButtonAddForm = styled.button`\n//     font-family: \"Montserrat\";\n//     width: 275px;\n//     flex-shrink: 0;\n//     border-radius: 4px;\n//     background: #FFF;\n//     height: 42px;\n//     border: none;\n//     margin-left: 5px;\n//     cursor: pointer;\n//         &:hover{\n//             background: #C8D5F6;\n//             color: #FFF;\n//             border-style: none;\n//             transition: 0.5s;\n//         }\n// `\n// const ButtonDelete = styled.button`\n//     font-family: \"Montserrat\";\n//     width: 268px;\n//     flex-shrink: 0;\n//     border-radius: 4px;\n//     border: none;\n//     background: #FFF;\n    \n//     cursor: pointer;\n//         &:hover{\n//             background: #FF7070;\n//             color: #FFF;\n//             border-style: none;\n//             transition: 0.6s;\n//         }\n// `\n// const FormBlock = styled.li`\n//     display: flex;\n//     flex-direction: column;\n//     padding: 5px;\n//     gap: 2px;\n// `\n// const FormLabel = styled.label`\n//     font-family: 'Montserrat';\n//     font-size: 16px;\n//     line-height: 27px;\n//     font-weight: 400;\n//     color: #000000;\n// `\n// const FormInput = styled.input`\n//     width: 550px;\n//     height: 30px;\n//     border-radius: 10px;\n//     background-color: #FFFFFF;\n//     border: none;\n//     outline: none;\n//     font-size: 16px;\n// `\n// const ButtonFun = styled.button`\n//     background-color: #D9D9D9;\n//     width: 1248px;\n//     height: 48px;\n//     border-radius: 5px;\n//     border-style: none;\n//     cursor: pointer;\n//     font-size: 16px;\n//     font-family: 'Montserrat';\n//     font-weight: 400px;\n\n//     &:hover{\n//         background-color: ${({$HoverButton}) => ($HoverButton ? '#C8D5F6' : '#FF7070')};\n//         color: #FFFFFF;\n//         transition: 0.5s;\n//     }\n// `\n// const NameLabInput = styled.input`\n//     display: flex;\n//     border: none;\n//     background: none;\n//     width: 608px;\n//     height: 260px;\n//     font-size: 18px;\n//     padding: 0px 0px 0px 30px;\n//     outline: none;\n// `\n\n// const LaboratoryAdd = () => {\n//     const [labTitle, setLabTitle] = useState(\"\");\n//     const [labDescription, setLabDescription] = useState(\"\");\n//     const [functions, setFunctions] = useState([]);\n//     const [constructions, setConstructions] = useState([]);\n//     const [symbols, setSymbols] = useState(0);\n//     const [rows, setRows] = useState(0);\n  \n//     const handleLabTitleChange = (event) => {\n//       setLabTitle(event.target.value);\n//     };\n  \n//     const handleLabDescriptionChange = (event) => {\n//       setLabDescription(event.target.value);\n//     };\n  \n//     const handleFunctionInputChange = (event, index) => {\n//       const updatedFunctions = [...functions];\n//       updatedFunctions[index][event.target.name] = event.target.value;\n//       setFunctions(updatedFunctions);\n//     };\n  \n//     const handleTestCaseInputChange = (event, funcIndex, testCaseIndex) => {\n//       const updatedFunctions = [...functions];\n//       updatedFunctions[funcIndex].test_cases[testCaseIndex][event.target.name] = event.target.value;\n//       setFunctions(updatedFunctions);\n//     };\n  \n//     const handleFormulaInputChange = (event, funcIndex, formulaIndex) => {\n//       const updatedFunctions = [...functions];\n//       updatedFunctions[funcIndex].formulas[formulaIndex][event.target.name] = event.target.value;\n//       setFunctions(updatedFunctions);\n//     };\n  \n//     const handleLinkedFormulaInputChange = (event, funcIndex, linkedFormulaIndex) => {\n//       const updatedFunctions = [...functions];\n//       updatedFunctions[funcIndex].linked_formulas[linkedFormulaIndex][event.target.name] = event.target.value;\n//       setFunctions(updatedFunctions);\n//     };\n  \n//     const handleConstructionInputChange = (event, index) => {\n//       const updatedConstructions = [...constructions];\n//       updatedConstructions[index][event.target.name] = event.target.value;\n//       setConstructions(updatedConstructions);\n//     };\n  \n//     const handleLengthCheckInputChange = (event) => {\n//       const name = event.target.name;\n//       const value = event.target.value;\n  \n//       if (name === \"symbols\") {\n//         setSymbols(value);\n//       } else if (name === \"rows\") {\n//         setRows(value);\n//       }\n//     };\n  \n//     const handleSaveLabData = async () => {\n//         const labData = {\n//           lab_task: {\n//             task_text: labDescription,\n//             functions,\n//             constructions,\n//             length_checks: {\n//               symbols,\n//               rows,\n//             },\n//           },\n//         };\n      \n//         try {\n//           const response = await Axios.post(\n//             'http://0.0.0.0:8000/docs#/newtask',\n//             labData\n//           );\n//           console.log(response.data);\n//           return response.data;\n//         } catch (error) {\n//           console.error('Error during lab data save:', error);\n//           return { error: 'Failed to save lab data' };\n//         }\n//       };\n    \n//       const handleSaveTaskPyTest = async (data) => {\n//         return Axios.post('http://0.0.0.0:8000/docs#/newTaskPyTest',data)\n//       } \n\n\n\n//     const [inputValueSimbol, setInputValueSimbol] = useState('')\n//     const [inputValueStr, setInputValueStr] = useState('')\n//     const [lengthInput, setLengthInput] = useState([])\n//     const [addConstr, setAddConstr] = useState('')\n//     const [addConstrBtn, setAddConstrBtn] = useState([])\n    \n//     const handleAddConstr = (event) => {\n//         setAddConstr(event.target.value)\n//     }\n\n//     const handleAddConstrBtn = () => {\n//         if(addConstr.trim !== ''){\n//             const newConstr = [...addConstrBtn, addConstr]\n            \n//             setAddConstrBtn(newConstr)\n//             setAddConstr('')\n//         }\n//     }\n\n//     const handleDeleteConstr = () => {\n//         setAddConstr('')\n//     }\n\n//     const handleChange = (event, inputNumber) => {\n//         const newValue = event.target.value;\n//         if ((inputNumber === 1 && newValue !== inputValueStr) || \n//             (inputNumber === 2 && newValue !== inputValueSimbol)) {\n//                 inputNumber === 1 ? setInputValueSimbol(newValue) : setInputValueStr(newValue);\n//             }\n//     }\n//     const handleDelete = () => {\n//         setInputValueSimbol('')\n//         setInputValueStr('')\n//     }\n\n//     const handleAddLengthCheck = () => {\n//         const newCheck = {\n//             symbolLength: inputValueSimbol.length,\n//             stringLength: inputValueStr.length,\n//         };\n//         setLengthInput([...lengthInput, newCheck]);\n\n//         setInputValueSimbol('');\n//         setInputValueStr('');\n//     }\n\n//     const [idFormula, setIdFormula] = useState('');\n//     const [descriptionFormula, setDescriptionFormula] = useState('');\n//     const [formula, setFormula] = useState('');\n//     const [addFormula, setAddFormula] = useState([])\n    \n//     const [idRelatedFormula, setIdRelatedFormula] = useState('');\n//     const [descriptionRelatedFormula, setDescriptionRelatedFormula] = useState('');\n//     const [formulaRelated, setRelatedFormula] = useState('');\n//     const [addRelatedFormula, setAddRelatedFormula] = useState([])\n    \n//     const handleAddFormul = (event, inputFormul) => {\n//         const newFormulaValue = event.target.value;\n//         if (inputFormul === 1) {\n//             setIdFormula(newFormulaValue);\n//         } else if (inputFormul === 2) {\n//             setDescriptionFormula(newFormulaValue);\n//         } else if (inputFormul === 3) {\n//             setFormula(newFormulaValue);\n//         }\n//     };\n      \n//     const handleAddFormulBtn = () => {\n//         const newFormul = {\n//             idForm: idFormula.length,\n//             descriptionForm: descriptionFormula.length,\n//             Form: formula.length,\n//         };\n//         setAddFormula([...addFormula, newFormul]);\n//         setIdFormula('');\n//         setDescriptionFormula('');\n//         setFormula('');\n//     };\n\n//     const handleDelFormulBtn = () => {\n//         setIdFormula('')\n//         setDescriptionFormula('')\n//         setFormula('')\n//     }\n\n//     const handleAddRelatedFormul = (event, inputFormulRelated) => {\n//         const newFormulaRelatedValue = event.target.value;\n//         if (inputFormulRelated === 1) {\n//             setIdRelatedFormula(newFormulaRelatedValue);\n//         } else if (inputFormulRelated === 2) {\n//             setDescriptionRelatedFormula(newFormulaRelatedValue);\n//         } else if (inputFormulRelated === 3) {\n//             setRelatedFormula(newFormulaRelatedValue);\n//         }\n//     };\n      \n//     const handleAddFormulRelatedBtn = () => {\n//         const newFormulRelated = {\n//             idForm: idFormula.length,\n//             descriptionForm: descriptionFormula.length,\n//             Form: formula.length,\n//         };\n//         setAddRelatedFormula([...addRelatedFormula, newFormulRelated]);\n//         setIdRelatedFormula('');\n//         setDescriptionRelatedFormula('');\n//         setRelatedFormula('');\n//     };\n\n//     const handleDelFormulRelatedBtn = () => {\n//         setIdRelatedFormula('')\n//         setDescriptionRelatedFormula('')\n//         setRelatedFormula('')\n//     }\n\n//     return ( \n//         <>\n//         <Section>\n//             <UlList>\n//                 <List>\n//                     <NameLabInput \n//                         type=\"text\" \n//                         placeholder=\"Введите назавание лабораторной работы\"\n//                         onChange={handleLabTitleChange}\n//                     /> \n//                 </List>\n//                 <List>\n//                     <div className=\"editing__block-Two\">\n//                         <TitleBlock>\n//                             Формат ввода данных:\n//                         </TitleBlock>\n//                             <p className=\"editing__block-text\">\n//                                 Вы можете пояснить, как будет происходить ввод данных\n//                             </p>\n//                             <input \n//                                 className=\"editing__block-input\" \n//                                 type=\"text\" \n//                                 onChange={handleLabDescriptionChange}\n//                                 placeholder=\"Введите текст\"\n//                             />   \n//                     </div>\n//                 </List> \n//                 <BigBlock $BigFon $BigHeight $BigWeight $GapForm>\n//                     <div className=\"block__one\">\n//                         <TitleBlock $Padding $Margin>\n//                             Cписок тестов:\n//                         </TitleBlock> \n//                             <UlMinBlock>\n//                                 <MinBlock>\n//                                         <TitleBlock $FontSize $FontWeight $Margin>\n//                                             Тест 1 \"Проверка на ...\"\n//                                         </TitleBlock>\n//                                         <div className=\"editing__block-name\">\n//                                             <TitleBlock $FontSize $FontWeight  $Margin>\n//                                                 Входные данные:\n//                                             </TitleBlock> \n//                                                 <input type=\"text\" className=\"some-input\"/>     \n//                                         </div>  \n//                                         <div className=\"editing__block-name\">\n//                                             <TitleBlock $FontSize $FontWeight  $Margin>  \n//                                             Вывод:\n//                                             </TitleBlock> \n//                                                 <input type=\"text\" className=\"some-input\"/>     \n//                                         </div> \n//                                         <IoIosClose className=\"icon\" onClick={()=>handleTestDelete(index)}/>\n//                                 </MinBlock>\n//                                 <MinBlock>\n//                                     <TitleBlock $FontSize $FontWeight $Margin>\n//                                             Тест 1 \"Проверка на ...\"\n//                                         </TitleBlock>\n//                                         <div className=\"editing__block-name\">\n//                                             <TitleBlock $FontSize $FontWeight  $Margin>\n//                                                 Входные данные:\n//                                             </TitleBlock> \n//                                                 <input type=\"text\" className=\"some-input\"/>     \n//                                         </div>  \n//                                         <div className=\"editing__block-name\">\n//                                             <TitleBlock $FontSize $FontWeight  $Margin>  \n//                                                 Вывод:\n//                                             </TitleBlock> \n//                                                 <input type=\"text\" className=\"some-input\"/>     \n//                                         </div> \n//                                         <IoIosClose className=\"icon\"/>\n//                                 </MinBlock>\n//                                 <MinBlock>\n//                                     <TitleBlock $FontSize $FontWeight $Margin>\n//                                             Тест 1 \"Проверка на ...\"\n//                                         </TitleBlock>\n//                                         <div className=\"editing__block-name\">\n//                                             <TitleBlock $FontSize $FontWeight  $Margin>\n//                                                 Входные данные:\n//                                             </TitleBlock> \n//                                                 <input type=\"text\" className=\"some-input\"/>     \n//                                         </div>  \n//                                         <div className=\"editing__block-name\">\n//                                             <TitleBlock $FontSize $FontWeight  $Margin>  \n//                                                 Вывод:\n//                                             </TitleBlock> \n//                                                 <input type=\"text\" className=\"some-input\"/>     \n//                                         </div> \n//                                         <IoIosClose className=\"icon\"/>\n//                                 </MinBlock>   \n//                             </UlMinBlock>\n//                     </div>\n//                     <div className=\"block__test\">\n//                         <TitleBlock>\n//                             Добавить новый тест:    \n//                         </TitleBlock> \n//                         <div className=\"editing__block-name\">\n//                             <TitleBlock $FontSize $FontWeight>\n//                                 Введите название теста:\n//                             </TitleBlock> \n//                                 <input type=\"text\" className=\"some-input\"/>     \n//                         </div>\n//                         <div className=\"editing__block-name\">\n//                             <TitleBlock $FontSize $FontWeight>\n//                                 Входные данные:\n//                             </TitleBlock> \n//                                 <input type=\"text\" className=\"some-input\"/>     \n//                         </div>\n//                         <div className=\"editing__block-name\">\n//                             <TitleBlock $FontSize $FontWeight>\n//                                 Вывод:\n//                             </TitleBlock> \n//                                 <input type=\"text\" className=\"some-input\"/>     \n//                         </div>\n//                         <ButtonAdd $ButtonAddW>\n//                             Добавить тест\n//                         </ButtonAdd>\n//                     </div>\n//                 </BigBlock>\n//                 <BigBlock >\n//                 <div className=\"block__one\">\n//                         <TitleBlock $Padding $Margin>\n//                             Cписок тестов:\n//                         </TitleBlock> \n//                             <UlMinBlock>\n//                                 <MinBlock>\n//                                         <TitleBlock $FontSize $FontWeight $Margin>\n//                                             Тест 1 \"Проверка на ...\"\n//                                         </TitleBlock>\n//                                         <div className=\"editing__block-name\">\n//                                             <TitleBlock $FontSize $FontWeight  $Margin>\n//                                                 Входные данные:\n//                                             </TitleBlock> \n//                                                 <input type=\"text\" className=\"some-input\"/>     \n//                                         </div>  \n//                                         <div className=\"editing__block-name\">\n//                                             <TitleBlock $FontSize $FontWeight  $Margin>  \n//                                             Вывод:\n//                                             </TitleBlock> \n//                                                 <input type=\"text\" className=\"some-input\"/>     \n//                                         </div> \n//                                         <IoIosClose className=\"icon\" />\n//                                 </MinBlock>\n//                                 <MinBlock>  \n//                                     <TitleBlock $FontSize $FontWeight $Margin>\n//                                             Тест 1 \"Проверка на ...\"\n//                                         </TitleBlock>\n//                                         <div className=\"editing__block-name\">\n//                                             <TitleBlock $FontSize $FontWeight  $Margin>\n//                                                 Входные данные:\n//                                             </TitleBlock> \n//                                                 <input type=\"text\" className=\"some-input\"/>     \n//                                         </div>  \n//                                         <div className=\"editing__block-name\">\n//                                             <TitleBlock $FontSize $FontWeight  $Margin>  \n//                                                 Вывод:\n//                                             </TitleBlock> \n//                                                 <input type=\"text\" className=\"some-input\"/>     \n//                                         </div> \n//                                         <IoIosClose className=\"icon\" />\n//                                 </MinBlock>  \n//                             </UlMinBlock>\n//                     </div>\n//                     <div className=\"block__test\">\n//                         <TitleBlock $Padding>\n//                             Формулы\n//                         </TitleBlock> \n//                         <UlMinBlock >\n//                             <FormBlock>\n//                                 <FormInput \n//                                     type=\"text\"\n//                                     value={idRelatedFormula}\n//                                     onChange={(event) => handleAddRelatedFormul(event,1)}\n//                                     placeholder=\"Введите формулу:\"\n//                                  />\n//                             </FormBlock>\n//                             <div className=\"editing__block-bth\">\n//                                 <ButtonAddForm onClick={handleAddFormulRelatedBtn}>\n//                                     Добавить формулу\n//                                 </ButtonAddForm>\n//                             </div>   \n//                         </UlMinBlock>\n//                     </div>\n//                 </BigBlock>\n//                 <div className=\"block__button\"> \n//                     <button className=\"block__end\">\n//                         <Link className=\"block__end-link\" to='/Laboratory'>\n//                             Завершить редактирование и добавить лабораторную\n//                         </Link>\n//                     </button>   \n//                 </div>\n//             </UlList>  \n//         </Section>\n//         </>\n//      );\n// }\n \n// export default LaboratoryAdd;\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}