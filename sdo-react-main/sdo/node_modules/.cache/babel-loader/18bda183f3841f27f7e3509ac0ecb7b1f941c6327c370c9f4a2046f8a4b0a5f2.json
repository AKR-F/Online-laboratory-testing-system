{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Online-laboratory-testing-system\\\\sdo-react-main\\\\sdo\\\\src\\\\pages\\\\LabaStud\\\\Button.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import styled from 'styled-components';\n\n// const Form = styled.form`\n//     display: flex;\n//     flex-direction: column;\n//     align-items: center;\n//     gap: 45px;\n// `;\n\n// const Button = styled.button`\n//     width: 1098px;\n//     height: 75px;\n//     background-color: #FFFFFF;\n//     color: #000000;\n//     cursor: pointer;\n//     border-radius: 10px;\n//     border-style: none;\n//     font-family: 'Montserrat';\n//     font-size: 16px;\n//     margin-bottom: 20px;\n\n//     &:hover {\n//         background-color: #E2EDD0;\n//         color: #000;\n//         transition: 0.3s;\n//     }\n// `;\n\n// const Inpt = styled.input`\n//     display: none;\n// `;\n\n// const Label = styled.label`\n//   border: 2px dashed #000;\n//   height: 250px;\n//   text-align: center;\n//   border-radius: 7px;\n//   margin-top: 10px;\n//   width: 1098px;\n//   transition: background-color 0.3s;\n//   background-color: #FFFFFF;\n\n//   &:hover {\n//     background-color: #E2EDD08C;\n//   }\n// `;\n\n// const Span = styled.span`\n//     display: flex;\n//     justify-content: center;\n//     align-items: center;\n//     width: 100%;\n//     height: 100%;\n//     background-color: ${({ isDragging }) => (isDragging ? '#F5F5F5' : 'transparent')};\n//     transition: background-color 0.3s ease;\n// `;\n\n// const FileUploader = ({ file, setFile, onSubmit }) => {\n//     const [isDragging, setIsDragging] = useState(false);\n//     const [isHovered, setIsHovered] = useState(false);\n\n//     const handleChange = (e) => {\n//         if (e.target.files && e.target.files[0]) {\n//             setFile(e.target.files[0]);\n//         }\n//     };\n\n//     const handleDragEnter = (e) => {\n//         e.preventDefault();\n//         setIsDragging(true);\n//     };\n\n//     const handleDragLeave = () => {\n//         setIsDragging(false);\n//     };\n\n//     const handleDrop = (e) => {\n//         e.preventDefault();\n//         setIsDragging(false);\n\n//         if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n//             setFile(e.dataTransfer.files[0]);\n//         }\n//     };\n\n//     return (\n//         <Form\n//             onDragEnter={handleDragEnter}\n//             onDragOver={handleDragEnter}\n//             onDragLeave={handleDragLeave}\n//             onDrop={handleDrop}\n//         >\n//             <Label\n//                 htmlFor=\"fileInput\"\n//                 isHovered={isHovered}\n//                 onMouseEnter={() => setIsHovered(true)}\n//                 onMouseLeave={() => setIsHovered(false)}\n//             >\n//                 <Span isDragging={isDragging}>\n//                     {file ? file.name : 'Загрузите файл'}\n//                 </Span>\n//                 <Inpt\n//                     id=\"fileInput\"\n//                     type=\"file\"\n//                     onChange={handleChange}\n//                     onMouseEnter={() => setIsHovered(true)}\n//                     onMouseLeave={() => setIsHovered(false)}\n//                 />\n//             </Label>\n//             <Button type=\"button\" onClick={onSubmit}>\n//                 Отправить на проверку\n//             </Button>\n//         </Form>\n//     );\n// };\n\n// export default FileUploader;\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios'; // Подключаем axios для работы с загрузкой файлов\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 45px;\n`;\n_c = Form;\nconst Button = styled.button`\n    width: 1098px;\n    height: 75px;\n    background-color: #FFFFFF;\n    color: #000000;\n    cursor: ${({\n  disabled\n}) => disabled ? 'not-allowed' : 'pointer'};\n    border-radius: 10px;\n    border-style: none;\n    font-family: 'Montserrat';\n    font-size: 16px;\n    margin-bottom: 20px;\n    opacity: ${({\n  disabled\n}) => disabled ? 0.5 : 1};\n\n    &:hover {\n        background-color: ${({\n  disabled\n}) => disabled ? '#FFFFFF' : '#E2EDD0'};\n        color: #000;\n        transition: 0.3s;\n    }\n`;\n_c2 = Button;\nconst Inpt = styled.input`\n    display: none;\n`;\n_c3 = Inpt;\nconst Label = styled.label`\n  border: 2px dashed #000;\n  height: 250px;\n  text-align: center;\n  border-radius: 7px;\n  margin-top: 10px;\n  width: 1098px;\n  transition: background-color 0.3s;\n  background-color: #FFFFFF;\n\n  &:hover {\n    background-color: #E2EDD08C;\n  }\n`;\n_c4 = Label;\nconst Span = styled.span`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    background-color: ${({\n  isDragging\n}) => isDragging ? '#F5F5F5' : 'transparent'};\n    transition: background-color 0.3s ease;\n`;\n_c5 = Span;\nconst ProgressBarWrapper = styled.div`\n    width: 100%;\n    height: 20px;\n    background-color: #f0f0f0;\n    border-radius: 10px;\n    overflow: hidden;\n    margin-top: 10px;\n`;\n_c6 = ProgressBarWrapper;\nconst ProgressBar = styled.div`\n    height: 100%;\n    width: ${({\n  progress\n}) => progress}%;\n    background-color: #4caf50;\n    transition: width 0.4s ease;\n`;\n_c7 = ProgressBar;\nconst FileUploader = ({\n  file,\n  setFile,\n  onSubmit\n}) => {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0); // Состояние прогресса загрузки\n  const [isUploading, setIsUploading] = useState(false); // Состояние загрузки файла\n\n  const handleChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setFile(e.target.files[0]);\n    }\n  };\n  const handleDragEnter = e => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDragLeave = () => {\n    setIsDragging(false);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    setIsDragging(false);\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      setFile(e.dataTransfer.files[0]);\n    }\n  };\n\n  // Функция загрузки файла\n  const handleFileUpload = () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    setIsUploading(true); // Начинаем загрузку\n\n    axios.post('http://example.com/upload', formData, {\n      onUploadProgress: progressEvent => {\n        const progress = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        setUploadProgress(progress);\n      }\n    }).then(response => {\n      console.log('File uploaded successfully:', response.data);\n      onSubmit(); // После загрузки вызываем функцию отправки\n    }).catch(error => {\n      console.error('Error uploading file:', error);\n    }).finally(() => {\n      setIsUploading(false); // Заканчиваем загрузку\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onDragEnter: handleDragEnter,\n    onDragOver: handleDragEnter,\n    onDragLeave: handleDragLeave,\n    onDrop: handleDrop,\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      htmlFor: \"fileInput\",\n      isHovered: isHovered,\n      onMouseEnter: () => setIsHovered(true),\n      onMouseLeave: () => setIsHovered(false),\n      children: [/*#__PURE__*/_jsxDEV(Span, {\n        isDragging: isDragging,\n        children: file ? file.name : 'Загрузите файл'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Inpt, {\n        id: \"fileInput\",\n        type: \"file\",\n        onChange: handleChange,\n        onMouseEnter: () => setIsHovered(true),\n        onMouseLeave: () => setIsHovered(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }, this), isUploading && /*#__PURE__*/_jsxDEV(ProgressBarWrapper, {\n      children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n        progress: uploadProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      onClick: handleFileUpload,\n      disabled: !file || isUploading,\n      children: isUploading ? 'Загрузка...' : 'Отправить на проверку'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUploader, \"C2RBHOoJwgFfrPoC2pGDoIsgAIY=\");\n_c8 = FileUploader;\nexport default FileUploader;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Inpt\");\n$RefreshReg$(_c4, \"Label\");\n$RefreshReg$(_c5, \"Span\");\n$RefreshReg$(_c6, \"ProgressBarWrapper\");\n$RefreshReg$(_c7, \"ProgressBar\");\n$RefreshReg$(_c8, \"FileUploader\");","map":{"version":3,"names":["React","useState","styled","axios","jsxDEV","_jsxDEV","Form","form","_c","Button","button","disabled","_c2","Inpt","input","_c3","Label","label","_c4","Span","span","isDragging","_c5","ProgressBarWrapper","div","_c6","ProgressBar","progress","_c7","FileUploader","file","setFile","onSubmit","_s","setIsDragging","isHovered","setIsHovered","uploadProgress","setUploadProgress","isUploading","setIsUploading","handleChange","e","target","files","handleDragEnter","preventDefault","handleDragLeave","handleDrop","dataTransfer","handleFileUpload","formData","FormData","append","post","onUploadProgress","progressEvent","Math","round","loaded","total","then","response","console","log","data","catch","error","finally","onDragEnter","onDragOver","onDragLeave","onDrop","children","htmlFor","onMouseEnter","onMouseLeave","name","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","onClick","_c8","$RefreshReg$"],"sources":["C:/Users/user/Online-laboratory-testing-system/sdo-react-main/sdo/src/pages/LabaStud/Button.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import styled from 'styled-components';\n\n// const Form = styled.form`\n//     display: flex;\n//     flex-direction: column;\n//     align-items: center;\n//     gap: 45px;\n// `;\n\n// const Button = styled.button`\n//     width: 1098px;\n//     height: 75px;\n//     background-color: #FFFFFF;\n//     color: #000000;\n//     cursor: pointer;\n//     border-radius: 10px;\n//     border-style: none;\n//     font-family: 'Montserrat';\n//     font-size: 16px;\n//     margin-bottom: 20px;\n\n//     &:hover {\n//         background-color: #E2EDD0;\n//         color: #000;\n//         transition: 0.3s;\n//     }\n// `;\n\n// const Inpt = styled.input`\n//     display: none;\n// `;\n\n// const Label = styled.label`\n//   border: 2px dashed #000;\n//   height: 250px;\n//   text-align: center;\n//   border-radius: 7px;\n//   margin-top: 10px;\n//   width: 1098px;\n//   transition: background-color 0.3s;\n//   background-color: #FFFFFF;\n\n//   &:hover {\n//     background-color: #E2EDD08C;\n//   }\n// `;\n\n// const Span = styled.span`\n//     display: flex;\n//     justify-content: center;\n//     align-items: center;\n//     width: 100%;\n//     height: 100%;\n//     background-color: ${({ isDragging }) => (isDragging ? '#F5F5F5' : 'transparent')};\n//     transition: background-color 0.3s ease;\n// `;\n\n// const FileUploader = ({ file, setFile, onSubmit }) => {\n//     const [isDragging, setIsDragging] = useState(false);\n//     const [isHovered, setIsHovered] = useState(false);\n\n//     const handleChange = (e) => {\n//         if (e.target.files && e.target.files[0]) {\n//             setFile(e.target.files[0]);\n//         }\n//     };\n\n//     const handleDragEnter = (e) => {\n//         e.preventDefault();\n//         setIsDragging(true);\n//     };\n\n//     const handleDragLeave = () => {\n//         setIsDragging(false);\n//     };\n\n//     const handleDrop = (e) => {\n//         e.preventDefault();\n//         setIsDragging(false);\n\n//         if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n//             setFile(e.dataTransfer.files[0]);\n//         }\n//     };\n\n//     return (\n//         <Form\n//             onDragEnter={handleDragEnter}\n//             onDragOver={handleDragEnter}\n//             onDragLeave={handleDragLeave}\n//             onDrop={handleDrop}\n//         >\n//             <Label\n//                 htmlFor=\"fileInput\"\n//                 isHovered={isHovered}\n//                 onMouseEnter={() => setIsHovered(true)}\n//                 onMouseLeave={() => setIsHovered(false)}\n//             >\n//                 <Span isDragging={isDragging}>\n//                     {file ? file.name : 'Загрузите файл'}\n//                 </Span>\n//                 <Inpt\n//                     id=\"fileInput\"\n//                     type=\"file\"\n//                     onChange={handleChange}\n//                     onMouseEnter={() => setIsHovered(true)}\n//                     onMouseLeave={() => setIsHovered(false)}\n//                 />\n//             </Label>\n//             <Button type=\"button\" onClick={onSubmit}>\n//                 Отправить на проверку\n//             </Button>\n//         </Form>\n//     );\n// };\n\n// export default FileUploader;\n\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios'; // Подключаем axios для работы с загрузкой файлов\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 45px;\n`;\n\nconst Button = styled.button`\n    width: 1098px;\n    height: 75px;\n    background-color: #FFFFFF;\n    color: #000000;\n    cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\n    border-radius: 10px;\n    border-style: none;\n    font-family: 'Montserrat';\n    font-size: 16px;\n    margin-bottom: 20px;\n    opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n\n    &:hover {\n        background-color: ${({ disabled }) => (disabled ? '#FFFFFF' : '#E2EDD0')};\n        color: #000;\n        transition: 0.3s;\n    }\n`;\n\nconst Inpt = styled.input`\n    display: none;\n`;\n\nconst Label = styled.label`\n  border: 2px dashed #000;\n  height: 250px;\n  text-align: center;\n  border-radius: 7px;\n  margin-top: 10px;\n  width: 1098px;\n  transition: background-color 0.3s;\n  background-color: #FFFFFF;\n\n  &:hover {\n    background-color: #E2EDD08C;\n  }\n`;\n\nconst Span = styled.span`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    background-color: ${({ isDragging }) => (isDragging ? '#F5F5F5' : 'transparent')};\n    transition: background-color 0.3s ease;\n`;\n\nconst ProgressBarWrapper = styled.div`\n    width: 100%;\n    height: 20px;\n    background-color: #f0f0f0;\n    border-radius: 10px;\n    overflow: hidden;\n    margin-top: 10px;\n`;\n\nconst ProgressBar = styled.div`\n    height: 100%;\n    width: ${({ progress }) => progress}%;\n    background-color: #4caf50;\n    transition: width 0.4s ease;\n`;\n\nconst FileUploader = ({ file, setFile, onSubmit }) => {\n    const [isDragging, setIsDragging] = useState(false);\n    const [isHovered, setIsHovered] = useState(false);\n    const [uploadProgress, setUploadProgress] = useState(0); // Состояние прогресса загрузки\n    const [isUploading, setIsUploading] = useState(false);  // Состояние загрузки файла\n\n    const handleChange = (e) => {\n        if (e.target.files && e.target.files[0]) {\n            setFile(e.target.files[0]);\n        }\n    };\n\n    const handleDragEnter = (e) => {\n        e.preventDefault();\n        setIsDragging(true);\n    };\n\n    const handleDragLeave = () => {\n        setIsDragging(false);\n    };\n\n    const handleDrop = (e) => {\n        e.preventDefault();\n        setIsDragging(false);\n\n        if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n            setFile(e.dataTransfer.files[0]);\n        }\n    };\n\n    // Функция загрузки файла\n    const handleFileUpload = () => {\n        if (!file) return;\n\n        const formData = new FormData();\n        formData.append('file', file);\n\n        setIsUploading(true); // Начинаем загрузку\n\n        axios.post('http://example.com/upload', formData, {\n            onUploadProgress: (progressEvent) => {\n                const progress = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n                setUploadProgress(progress);\n            }\n        })\n        .then((response) => {\n            console.log('File uploaded successfully:', response.data);\n            onSubmit(); // После загрузки вызываем функцию отправки\n        })\n        .catch((error) => {\n            console.error('Error uploading file:', error);\n        })\n        .finally(() => {\n            setIsUploading(false); // Заканчиваем загрузку\n        });\n    };\n\n    return (\n        <Form\n            onDragEnter={handleDragEnter}\n            onDragOver={handleDragEnter}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDrop}\n        >\n            <Label\n                htmlFor=\"fileInput\"\n                isHovered={isHovered}\n                onMouseEnter={() => setIsHovered(true)}\n                onMouseLeave={() => setIsHovered(false)}\n            >\n                <Span isDragging={isDragging}>\n                    {file ? file.name : 'Загрузите файл'}\n                </Span>\n                <Inpt\n                    id=\"fileInput\"\n                    type=\"file\"\n                    onChange={handleChange}\n                    onMouseEnter={() => setIsHovered(true)}\n                    onMouseLeave={() => setIsHovered(false)}\n                />\n            </Label>\n\n            {/* Прогресс-бар */}\n            {isUploading && (\n                <ProgressBarWrapper>\n                    <ProgressBar progress={uploadProgress} />\n                </ProgressBarWrapper>\n            )}\n\n            <Button \n                type=\"button\" \n                onClick={handleFileUpload} \n                disabled={!file || isUploading}\n            >\n                {isUploading ? 'Загрузка...' : 'Отправить на проверку'}\n            </Button>\n        </Form>\n    );\n};\n\nexport default FileUploader;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,IAAI,GAAGJ,MAAM,CAACK,IAAK;AACzB;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GALIF,IAAI;AAOV,MAAMG,MAAM,GAAGP,MAAM,CAACQ,MAAO;AAC7B;AACA;AACA;AACA;AACA,cAAc,CAAC;EAAEC;AAAS,CAAC,KAAMA,QAAQ,GAAG,aAAa,GAAG,SAAW;AACvE;AACA;AACA;AACA;AACA;AACA,eAAe,CAAC;EAAEA;AAAS,CAAC,KAAMA,QAAQ,GAAG,GAAG,GAAG,CAAG;AACtD;AACA;AACA,4BAA4B,CAAC;EAAEA;AAAS,CAAC,KAAMA,QAAQ,GAAG,SAAS,GAAG,SAAW;AACjF;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAlBIH,MAAM;AAoBZ,MAAMI,IAAI,GAAGX,MAAM,CAACY,KAAM;AAC1B;AACA,CAAC;AAACC,GAAA,GAFIF,IAAI;AAIV,MAAMG,KAAK,GAAGd,MAAM,CAACe,KA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}