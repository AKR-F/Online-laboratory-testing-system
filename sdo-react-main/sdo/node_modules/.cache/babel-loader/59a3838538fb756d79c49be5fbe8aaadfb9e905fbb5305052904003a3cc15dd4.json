{"ast":null,"code":"var _jsxFileName = \"/Users/danielkudinov/Desktop/sdo-project/front/src/components/BreadCrumbs.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport \"../styles/style.css\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Ul = styled.ul`\n    display: flex;\n    gap: 15px;\n    flex-direction: row;\n    .list__bread{\n    list-style-type: none;\n    }\n    .link__bread{\n        text-decoration: none;\n        color: #000;\n        font-family: \"Montserrat\";\n        font-size: 16px;\n    }\n`;\n_c = Ul;\nconst Bread = () => {\n  _s();\n  const location = useLocation();\n  const pathNames = location.pathname.split('/').filter(path => path !== '');\n  const pageNames = {\n    \"/\": \"Главная\",\n    \"login\": \"Авторизация\",\n    \"Laboratory\": \"Лабораторные работы\",\n    \"editingLaboratoryPrep\": \"Редактирование лабораторной работы\",\n    \"Registration\": \"Регистрация\",\n    \"profile\": \"Личный кабинет\"\n  };\n  const breadcrumbs = pathNames.map((path, index) => {\n    const routeTo = `/${pathNames.slice(0, index + 1).join('/')}`;\n    const isLast = index === pathNames.length - 1;\n    const crumbClass = isLast ? \"breadcrumb-last\" : \"link__bread\";\n    const pageName = pageNames[path] || path;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: `list__bread ${crumbClass}`,\n      children: isLast ? /*#__PURE__*/_jsxDEV(Link, {\n        className: \"link__bread\",\n        children: [pageName, \" /\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: routeTo,\n        children: pageName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumbs\",\n      children: /*#__PURE__*/_jsxDEV(Ul, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list__bread\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"link__bread\",\n            children: \"\\u0413\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F /\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), breadcrumbs]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Bread, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c2 = Bread;\nexport default Bread;\nvar _c, _c2;\n$RefreshReg$(_c, \"Ul\");\n$RefreshReg$(_c2, \"Bread\");","map":{"version":3,"names":["React","Link","useLocation","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","Ul","ul","_c","Bread","_s","location","pathNames","pathname","split","filter","path","pageNames","breadcrumbs","map","index","routeTo","slice","join","isLast","length","crumbClass","pageName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c2","$RefreshReg$"],"sources":["/Users/danielkudinov/Desktop/sdo-project/front/src/components/BreadCrumbs.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport \"../styles/style.css\";\nimport styled from 'styled-components'\n\nconst Ul = styled.ul`\n    display: flex;\n    gap: 15px;\n    flex-direction: row;\n    .list__bread{\n    list-style-type: none;\n    }\n    .link__bread{\n        text-decoration: none;\n        color: #000;\n        font-family: \"Montserrat\";\n        font-size: 16px;\n    }\n`\n\nconst Bread = () => {\n    const location = useLocation();\n    const pathNames = location.pathname.split('/').filter((path) => path !== '');\n\n   \n    const pageNames = {\n        \"/\": \"Главная\",\n        \"login\": \"Авторизация\", \n        \"Laboratory\": \"Лабораторные работы\", \n        \"editingLaboratoryPrep\": \"Редактирование лабораторной работы\", \n        \"Registration\" : \"Регистрация\",\n        \"profile\" : \"Личный кабинет\",\n    };\n\n\n    const breadcrumbs = pathNames.map((path, index) => {\n        const routeTo = `/${pathNames.slice(0, index + 1).join('/')}`;\n        const isLast = index === pathNames.length - 1;\n\n        const crumbClass = isLast ? \"breadcrumb-last\" : \"link__bread\";\n        const pageName = pageNames[path] || path;\n\n        return (\n            <li key={index} className={`list__bread ${crumbClass}`}>\n                {isLast ? (\n                    <Link className=\"link__bread\">{pageName} /</Link>\n                ) : (\n                    <Link to={routeTo}>{pageName}</Link>\n                )}\n            </li>\n        );\n    });\n\n    return (\n        <>\n            <nav aria-label=\"breadcrumbs\">\n                <Ul>\n                    <li className=\"list__bread\">\n                        <Link to='/' className=\"link__bread\">Главная /</Link>\n                    </li>\n                    {breadcrumbs}\n                </Ul>\n            </nav>\n        </> \n    );\n}\n\nexport default Bread;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}